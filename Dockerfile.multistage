# BASE
FROM ruby:2.7 AS base

RUN curl -sL https://deb.nodesource.com/setup_12.x | bash - && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
RUN apt-get update -qq && apt-get install -y build-essential nodejs yarn libsodium23

RUN gem install passenger && passenger-config install-standalone-runtime && passenger-config build-native-support

RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app
# END

# JS BUILDER
FROM base AS js-builder
ENV NODE_ENV=production

WORKDIR /usr/src/app
RUN mkdir -p /usr/src/app/app/assets/builds

ONBUILD COPY esbuild.config.js /usr/src/app/
ONBUILD COPY .npmrc /usr/src/app/
ONBUILD COPY package.json /usr/src/app/
ONBUILD COPY yarn.lock /usr/src/app/
ONBUILD RUN yarn install

ONBUILD COPY ./app/javascript /usr/src/app/app/javascript
ONBUILD RUN yarn build
# END

# GEM BUILDER
FROM base AS gem-builder
WORKDIR /usr/src/app

ONBUILD ARG GITHUB_PKG_AUTH_TOKEN
ONBUILD RUN if [[ -z "$GITHUB_PKG_AUTH_TOKEN" ]] ; then echo 'Argument not provided' ; else bundle config set rubygems.pkg.github.com ${GITHUB_PKG_AUTH_TOKEN} ; fi

ONBUILD COPY Gemfile /usr/src/app/
ONBUILD COPY Gemfile.lock /usr/src/app/
ONBUILD RUN bundle config --global frozen 1 && bundle install --jobs 4 --without development test
# END

# FINAL IMAGE
FROM base
LABEL MAINTAINER="Richard Adams richard@madwire.co.uk"

ENV PORT=80
ENV MIN_INSTANCES=2
ENV MAX_POOL_SIZE=6

ONBUILD COPY --from=gem-builder /usr/src/app/Gemfile /usr/src/app/
ONBUILD COPY --from=gem-builder /usr/src/app/Gemfile.lock /usr/src/app/
ONBUILD COPY --from=gem-builder /usr/local/bundle/ /usr/local/bundle/
ONBUILD COPY --from=js-builder /usr/src/app/app/assets/builds /usr/src/app/app/assets/builds
ONBUILD COPY --from=js-builder /usr/src/app/node_modules /usr/src/app/node_modules

ONBUILD COPY Rakefile /usr/src/app/
ONBUILD COPY ./config /usr/src/app/config
ONBUILD COPY ./app/assets /usr/src/app/app/assets
ONBUILD RUN NODE_ENV=production RAILS_ENV=production SECRET_KEY_BASE=temp bundle exec rake assets:precompile

ONBUILD COPY . /usr/src/app

CMD sh -c 'passenger start -p $PORT --max-pool-size $MAX_POOL_SIZE --min-instances $MIN_INSTANCES --disable-log-prefix --log-file /dev/stdout'
# END